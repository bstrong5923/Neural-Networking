import os
os.environ['SDL_VIDEO_WINDOW_POS'] = '0,0'
import pgzrun
from pgzhelper import *
from time import sleep

import random
import numpy as np

HEIGHT = 1024
WIDTH = 1024

options = ["Turn 90°", "Turn 180°", "Turn 270°", "Go Forward", "Go Right", "Go Backward", "Go Left"]

class guy:
    def __init__(self, neurons, color):
        self.d = 3
        self.actor = Actor(str(color))
        self.speed = 5
        self.brain = neurons

    def act(self, choices):
        x = self.findMax(choices) + 1
        if x == 1:
            self.op1()
        elif x == 2:
            self.op2()
        elif x == 3:
            self.op3()
        elif x == 4:
            self.op4()
        elif x == 5:
            self.op5()
        elif x == 6:
            self.op6()
        elif x == 7:
            self.op7()
        self.boundary()

    def boundary(self):
        if self.actor.y > 1024:
            self.actor.y = 1024
        elif self.actor.y < 0:
            self.actor.y = 0
        elif self.actor.x > 1024:
            self.actor.x = 1024
        elif self.actor.x < 0:
            self.actor.x = 0

    def findMax(self, choices):
        max = 0
        for x in range(len(choices)):
            if choices[x] > choices[max]:
                max = x
        return max

    def choose(self):
        output = [self.actor.x / 1024, self.actor.y / 1024, self.d / 3]
        for lay in range(len(self.brain)):
            input = output[:]
            output = []
            for neuron in self.brain[lay]:
                output.append(self.evalNeuron(input, neuron))
        return output

    def evalNeuron(self, input, values):
        val = 0
        for x in range(len(input)):
            val += input[x] * values[0][x] #previous neuron times weight
        val += values[1] #bias
        val = val / values[2] #denom
        return val




    def turn(self, val):
        self.d += val
        if self.d > 3:
            self.d -= 4
    def move(self, val):
        r = self.d + val
        if r > 3:
            r -= 4
        if r == 0:
            self.actor.y += self.speed
        elif r == 1:
            self.actor.x += self.speed
        elif r == 2:
            self.actor.y -= self.speed
        else:
            self.actor.x -= self.speed


    def op1(self):
        self.turn(1)
    def op2(self):
        self.turn(2)
    def op3(self):
        self.turn(3)
    def op4(self):
        self.move(0)
    def op5(self):
        self.move(1)
    def op6(self):
        self.move(2)
    def op7(self):
        self.move(3)

guys = [
	guy([[[[0.5, 2.5, 1.7], 0, 4.7], [[0.1, 0.0, 0.1], 0, 0.2], [[2.4, 1.6, 1.5], 0, 5.5], [[2.3, 0.5, 0.7], 0, 3.5], [[1.7, 2.1, 0.8], 0, 4.6], [[2.3, 0.9, 3.0], 0, 6.2], [[0.4, 1.0, 1.6], 1, 4.0]], [[[2.6, 0.2, 1.2, 2.0, 0.5, 1.5, 1.3], 0, 9.3], [[1.4, 2.1, 2.4, 1.3, 1.9, 2.2, 0.2], 1, 12.5], [[2.3, 0.8, 1.7, 0.5, 2.2, 2.7, 2.6], 2, 14.8], [[2.1, 2.7, 0.3, 2.5, 2.3, 1.5, 1.5], 0, 12.9], [[1.2, 0.3, 1.6, 1.1, 1.7, 1.0, 2.5], 0, 9.4], [[0.1, 0.0, 0.7, 2.6, 0.1, 0.5, 1.5], 2, 7.5], [[2.3, 1.4, 2.5, 2.5, 0.8, 3.0, 1.5], 0, 14.0]]], 1),
	guy([[[[1.3, 1.2, 0.5], 1, 4.0], [[1.3, 1.6, 1.7], 1, 5.6], [[0.3, 0.5, 1.0], 1, 2.8], [[2.7, 0.9, 2.0], 0, 5.6], [[0.5, 0.4, 1.0], 0, 1.9], [[1.9, 2.4, 1.8], 0, 6.1], [[1.3, 2.0, 1.2], 1, 5.5]], [[[3.0, 0.9, 0.2, 2.2, 2.5, 1.9, 0.4], 1, 12.1], [[1.4, 1.8, 2.1, 0.0, 2.8, 1.0, 2.6], 2, 13.7], [[1.2, 2.0, 0.4, 2.9, 2.1, 1.4, 3.0], 1, 14.0], [[1.3, 1.0, 3.0, 0.1, 1.8, 1.5, 0.9], 2, 11.6], [[2.4, 2.6, 2.1, 1.7, 0.8, 1.3, 2.7], 1, 14.6], [[3.0, 2.5, 1.2, 1.3, 1.3, 2.9, 2.7], 0, 14.9], [[2.9, 1.8, 2.5, 1.7, 0.0, 1.6, 0.5], 1, 12.0]]], 2),
	guy([[[[1.2, 1.6, 2.0], 0, 4.8], [[2.3, 0.4, 0.8], 0, 3.5], [[0.4, 2.9, 2.8], 0, 6.1], [[2.2, 0.1, 0.3], 1, 3.6], [[0.3, 2.7, 0.7], 1, 4.7], [[2.1, 0.7, 2.0], 1, 5.8], [[1.7, 0.4, 1.4], 1, 4.5]], [[[1.9, 1.2, 2.4, 2.2, 0.8, 0.1, 2.3], 2, 12.9], [[0.2, 0.6, 1.8, 2.1, 0.2, 1.9, 2.7], 1, 10.5], [[2.9, 1.3, 0.3, 1.9, 0.6, 2.3, 2.0], 0, 11.3], [[1.6, 0.2, 2.2, 2.2, 0.9, 2.1, 2.3], 0, 11.5], [[2.0, 0.4, 3.0, 0.6, 0.7, 0.6, 2.6], 0, 9.9], [[2.2, 0.8, 2.2, 0.4, 2.7, 0.2, 2.7], 0, 11.2], [[2.0, 2.8, 2.9, 0.2, 0.7, 2.2, 1.1], 2, 13.9]]], 3),
	guy([[[[0.8, 1.1, 2.8], 1, 5.7], [[2.3, 1.7, 0.7], 0, 4.7], [[0.7, 1.3, 1.0], 1, 4.0], [[0.4, 0.1, 0.1], 0, 0.6], [[1.0, 1.5, 1.9], 0, 4.4], [[1.9, 2.8, 2.1], 0, 6.8], [[2.6, 1.0, 2.7], 1, 7.3]], [[[0.9, 2.3, 1.0, 0.9, 1.6, 2.3, 1.6], 0, 10.6], [[2.0, 2.2, 1.0, 2.5, 1.1, 1.8, 1.7], 1, 13.3], [[1.1, 0.0, 0.6, 0.4, 2.3, 2.7, 2.4], 1, 10.5], [[0.8, 0.7, 2.9, 0.1, 1.2, 2.9, 0.3], 0, 8.9], [[1.6, 0.7, 0.7, 0.7, 0.2, 2.1, 0.2], 2, 8.2], [[2.9, 2.1, 3.0, 2.6, 0.2, 2.8, 2.5], 1, 17.1], [[3.0, 0.3, 0.3, 2.4, 0.2, 1.2, 2.2], 2, 11.6]]], 4),
	guy([[[[2.4, 0.5, 0.7], 0, 3.6], [[0.2, 0.4, 0.6], 0, 1.2], [[3.0, 2.7, 1.2], 0, 6.9], [[0.9, 1.3, 0.0], 0, 2.2], [[2.5, 2.4, 1.9], 1, 7.8], [[1.9, 0.1, 2.3], 0, 4.3], [[1.3, 1.7, 2.7], 0, 5.7]], [[[2.1, 1.8, 2.0, 0.2, 0.6, 1.8, 0.0], 2, 10.5], [[1.8, 0.6, 2.9, 1.0, 2.7, 2.7, 0.4], 2, 14.1], [[0.5, 0.0, 1.2, 1.5, 1.6, 0.0, 0.6], 2, 7.4], [[1.6, 0.8, 0.8, 0.7, 1.1, 1.5, 1.0], 0, 7.5], [[2.4, 2.7, 2.3, 2.3, 0.2, 2.4, 0.8], 2, 15.1], [[0.2, 2.9, 2.8, 1.4, 0.5, 0.9, 0.0], 0, 8.7], [[1.0, 2.2, 1.5, 2.9, 2.1, 1.9, 1.3], 1, 13.9]]], 5),
	guy([[[[2.5, 1.8, 2.6], 1, 7.9], [[1.1, 1.7, 0.9], 0, 3.7], [[2.4, 2.1, 1.6], 1, 7.1], [[2.5, 2.0, 2.5], 1, 8.0], [[0.9, 0.8, 0.5], 0, 2.2], [[1.3, 1.3, 0.8], 1, 4.4], [[0.5, 1.9, 2.1], 1, 5.5]], [[[0.4, 3.0, 1.8, 1.0, 2.3, 1.3, 2.4], 0, 12.2], [[0.9, 2.0, 0.6, 2.2, 3.0, 2.7, 1.3], 2, 14.7], [[2.7, 0.3, 0.2, 1.9, 0.4, 2.2, 0.7], 0, 8.4], [[2.4, 1.8, 1.0, 0.1, 1.0, 2.0, 1.5], 2, 11.8], [[2.1, 1.8, 0.5, 0.4, 0.2, 2.3, 1.1], 1, 9.4], [[2.6, 1.7, 1.6, 2.0, 1.7, 2.2, 0.0], 0, 11.8], [[2.5, 2.5, 1.5, 0.9, 2.9, 1.4, 1.8], 0, 13.5]]], 6),
	guy([[[[2.9, 0.9, 1.9], 0, 5.7], [[2.1, 0.4, 1.5], 0, 4.0], [[0.5, 1.7, 2.1], 0, 4.3], [[1.2, 1.5, 1.3], 0, 4.0], [[2.2, 0.1, 0.0], 1, 3.3], [[0.8, 1.7, 2.5], 1, 6.0], [[2.5, 2.1, 0.0], 1, 5.6]], [[[1.7, 0.7, 0.9, 2.3, 3.0, 3.0, 1.7], 1, 14.3], [[2.9, 0.1, 1.6, 0.7, 0.8, 1.7, 1.7], 2, 11.5], [[1.4, 1.9, 1.0, 2.5, 1.9, 1.5, 1.9], 2, 14.1], [[2.7, 1.9, 0.1, 0.4, 2.8, 2.8, 0.3], 1, 12.0], [[0.2, 2.9, 2.0, 0.5, 1.8, 1.8, 0.9], 0, 10.1], [[0.9, 0.6, 0.0, 1.8, 1.3, 0.1, 2.4], 1, 8.1], [[2.7, 1.0, 1.7, 2.0, 2.7, 0.1, 1.4], 1, 12.6]]], 7),
	guy([[[[1.7, 0.5, 2.5], 0, 4.7], [[1.1, 1.8, 0.7], 1, 4.6], [[2.8, 0.3, 2.2], 0, 5.3], [[2.1, 1.0, 1.0], 0, 4.1], [[0.1, 1.6, 2.5], 1, 5.2], [[2.7, 0.2, 0.2], 1, 4.1], [[1.8, 0.0, 1.1], 1, 3.9]], [[[0.9, 2.7, 0.5, 2.2, 0.9, 0.1, 0.7], 0, 8.0], [[2.7, 2.0, 1.1, 0.7, 2.7, 0.4, 1.9], 2, 13.5], [[2.6, 0.2, 1.4, 2.2, 2.1, 2.0, 2.4], 2, 14.9], [[0.8, 2.6, 1.9, 1.3, 0.7, 3.0, 2.9], 0, 13.2], [[0.3, 0.7, 1.5, 2.6, 3.0, 2.7, 0.1], 1, 11.9], [[0.5, 2.9, 0.0, 2.2, 1.1, 2.9, 1.9], 0, 11.5], [[1.8, 1.5, 0.6, 1.8, 2.4, 1.9, 1.1], 2, 13.1]]], 8),
	guy([[[[0.6, 1.8, 0.8], 0, 3.2], [[2.0, 3.0, 2.0], 1, 8.0], [[2.0, 0.2, 2.7], 1, 5.9], [[2.8, 1.7, 0.4], 0, 4.9], [[1.0, 1.4, 2.2], 0, 4.6], [[1.9, 2.3, 1.2], 1, 6.4], [[2.1, 2.6, 2.5], 0, 7.2]], [[[0.4, 0.6, 0.5, 2.9, 0.3, 1.3, 1.4], 1, 8.4], [[2.7, 0.3, 0.9, 2.9, 2.1, 1.8, 2.2], 2, 14.9], [[1.2, 1.0, 0.9, 1.8, 0.2, 1.2, 0.7], 1, 8.0], [[1.0, 3.0, 0.5, 1.3, 2.1, 0.8, 0.5], 1, 10.2], [[1.3, 2.0, 1.4, 2.0, 1.1, 3.0, 2.9], 0, 13.7], [[0.4, 2.6, 2.8, 1.7, 0.8, 0.0, 2.7], 2, 13.0], [[0.4, 1.5, 2.9, 1.7, 2.1, 0.0, 2.4], 2, 13.0]]], 9),
	guy([[[[2.6, 2.8, 2.3], 1, 8.7], [[0.6, 1.3, 0.0], 1, 2.9], [[1.5, 0.1, 1.9], 0, 3.5], [[0.5, 1.8, 0.1], 1, 3.4], [[0.1, 0.8, 1.2], 0, 2.1], [[1.2, 0.6, 1.1], 1, 3.9], [[1.2, 2.7, 1.4], 1, 6.3]], [[[2.3, 2.8, 3.0, 1.8, 3.0, 1.6, 2.5], 0, 17.0], [[1.0, 2.3, 0.3, 0.4, 1.3, 1.2, 0.6], 2, 9.1], [[2.3, 1.8, 1.8, 2.9, 1.8, 1.0, 1.4], 0, 13.0], [[0.2, 1.7, 2.1, 2.1, 3.0, 0.8, 1.9], 1, 12.8], [[2.1, 1.3, 0.2, 0.2, 1.0, 1.2, 0.9], 2, 8.9], [[2.1, 0.2, 0.4, 2.8, 1.1, 0.4, 1.7], 1, 9.7], [[0.5, 2.4, 0.5, 1.7, 0.0, 2.3, 1.3], 2, 10.7]]], 10),
	guy([[[[0.3, 1.7, 1.7], 1, 4.7], [[0.3, 1.3, 0.7], 1, 3.3], [[2.9, 2.2, 2.5], 0, 7.6], [[1.7, 2.0, 1.2], 0, 4.9], [[0.1, 2.4, 2.5], 1, 6.0], [[1.2, 2.6, 2.0], 1, 6.8], [[0.4, 1.5, 1.9], 0, 3.8]], [[[1.4, 1.5, 1.3, 0.0, 0.9, 0.0, 2.8], 0, 7.9], [[0.4, 3.0, 0.2, 0.3, 2.2, 1.5, 0.0], 0, 7.6], [[2.6, 0.3, 0.9, 0.4, 2.6, 2.1, 2.1], 2, 13.0], [[0.9, 1.9, 1.2, 1.0, 0.4, 2.9, 1.8], 1, 11.1], [[1.8, 0.4, 2.2, 2.2, 0.4, 0.3, 2.4], 1, 10.7], [[0.8, 1.3, 2.1, 2.5, 2.0, 1.5, 1.8], 1, 13.0], [[1.2, 1.9, 3.0, 0.2, 2.1, 2.5, 2.8], 2, 15.7]]], 11),
	guy([[[[0.7, 0.9, 1.1], 1, 3.7], [[0.0, 0.1, 0.1], 1, 1.2], [[1.2, 2.6, 1.2], 0, 5.0], [[0.4, 1.0, 2.1], 0, 3.5], [[2.9, 0.8, 1.8], 1, 6.5], [[2.8, 2.9, 1.9], 1, 8.6], [[2.0, 1.2, 0.2], 1, 4.4]], [[[2.8, 2.3, 1.8, 0.1, 1.8, 3.0, 1.2], 0, 13.0], [[1.9, 1.2, 2.6, 2.3, 1.4, 0.2, 1.5], 2, 13.1], [[0.7, 2.7, 1.6, 1.9, 2.0, 1.2, 2.8], 2, 14.9], [[1.6, 0.1, 0.0, 1.4, 1.1, 1.2, 0.4], 0, 5.8], [[3.0, 1.0, 0.3, 0.7, 2.4, 1.0, 0.5], 1, 9.9], [[1.3, 1.5, 1.6, 1.8, 1.9, 1.5, 0.6], 2, 12.2], [[2.0, 1.0, 1.4, 0.0, 0.9, 1.5, 0.0], 1, 7.8]]], 12),
	guy([[[[2.8, 0.8, 2.4], 0, 6.0], [[1.8, 1.6, 2.3], 0, 5.7], [[1.1, 0.0, 1.6], 0, 2.7], [[2.6, 2.0, 0.6], 1, 6.2], [[1.9, 1.8, 0.8], 0, 4.5], [[2.8, 2.9, 3.0], 0, 8.7], [[2.8, 3.0, 0.6], 0, 6.4]], [[[2.3, 0.5, 2.0, 1.8, 2.9, 1.3, 0.7], 1, 12.5], [[0.2, 2.1, 0.4, 0.2, 1.0, 1.0, 1.7], 0, 6.6], [[1.5, 0.8, 1.1, 2.5, 1.7, 2.9, 1.8], 2, 14.3], [[1.1, 1.2, 1.3, 0.3, 0.7, 1.7, 2.7], 2, 11.0], [[0.7, 0.4, 2.1, 2.0, 2.2, 2.6, 2.7], 1, 13.7], [[2.4, 0.2, 2.0, 2.3, 0.0, 2.9, 0.7], 0, 10.5], [[2.7, 1.3, 2.7, 2.0, 1.2, 0.7, 0.7], 1, 12.3]]], 13),
	guy([[[[0.5, 1.3, 2.7], 1, 5.5], [[0.2, 1.3, 2.9], 1, 5.4], [[0.1, 1.7, 2.0], 1, 4.8], [[3.0, 2.6, 1.9], 0, 7.5], [[2.4, 1.4, 1.5], 0, 5.3], [[2.6, 2.3, 1.7], 1, 7.6], [[0.0, 2.4, 1.7], 1, 5.1]], [[[0.4, 0.1, 1.2, 2.9, 2.7, 1.3, 1.9], 2, 12.5], [[1.1, 2.2, 1.4, 0.6, 0.7, 0.8, 1.0], 2, 9.8], [[2.7, 1.8, 2.6, 1.9, 2.5, 1.2, 0.3], 1, 14.0], [[1.2, 1.9, 2.7, 0.5, 2.7, 2.3, 0.9], 2, 14.2], [[1.0, 1.1, 0.3, 0.4, 1.9, 2.3, 0.6], 2, 9.6], [[0.2, 0.6, 0.3, 0.7, 0.4, 1.6, 1.5], 2, 7.3], [[2.9, 0.3, 1.7, 1.6, 1.1, 3.0, 1.3], 1, 12.9]]], 14),
	guy([[[[1.8, 2.7, 1.1], 1, 6.6], [[0.1, 1.3, 0.3], 0, 1.7], [[1.4, 2.0, 2.0], 1, 6.4], [[0.3, 0.7, 0.0], 0, 1.0], [[1.2, 0.0, 0.2], 1, 2.4], [[2.8, 1.4, 2.4], 0, 6.6], [[0.6, 1.4, 1.9], 0, 3.9]], [[[0.8, 1.5, 0.9, 0.0, 2.7, 2.6, 0.7], 2, 11.2], [[2.5, 0.4, 0.5, 0.3, 1.3, 0.3, 2.1], 1, 8.4], [[0.7, 0.9, 2.5, 0.5, 0.2, 1.6, 0.1], 1, 7.5], [[0.7, 0.5, 0.3, 0.3, 0.7, 1.8, 1.0], 0, 5.3], [[1.8, 2.0, 1.5, 0.2, 1.8, 1.3, 1.5], 2, 12.1], [[0.2, 3.0, 1.5, 1.4, 1.5, 2.0, 0.8], 1, 11.4], [[0.7, 1.8, 2.3, 2.2, 0.5, 2.5, 2.2], 0, 12.2]]], 15),
	guy([[[[2.2, 0.4, 1.8], 0, 4.4], [[0.8, 0.6, 1.8], 1, 4.2], [[1.0, 0.1, 2.3], 1, 4.4], [[1.9, 1.3, 1.7], 0, 4.9], [[0.5, 1.4, 2.4], 0, 4.3], [[2.9, 0.4, 1.9], 0, 5.2], [[2.2, 1.4, 2.7], 1, 7.3]], [[[0.7, 1.3, 2.0, 0.0, 2.5, 2.9, 1.4], 1, 11.8], [[2.2, 1.1, 2.8, 1.6, 3.0, 0.5, 2.0], 0, 13.2], [[2.0, 1.7, 1.0, 0.8, 1.7, 2.4, 2.1], 0, 11.7], [[1.2, 2.3, 2.3, 1.4, 2.2, 2.8, 3.0], 2, 17.2], [[1.6, 1.5, 2.6, 2.5, 0.6, 2.9, 0.3], 0, 12.0], [[0.8, 2.9, 0.7, 1.3, 1.3, 1.3, 0.0], 1, 9.3], [[0.6, 1.1, 0.5, 0.7, 0.3, 2.4, 0.3], 1, 6.9]]], 16)
]
for guy in guys: #Spawn randomly
    guy.actor.x = random.randint(20,1004)
    guy.actor.y = random.randint(20, 1004)
    guy.d = random.randint(0,3)

# guys[0].actor.x = 900
# guys[0].actor.y = 900
# guys[0].d = 3

def draw():
    screen.clear()
    screen.fill((255,255,255,255))
    for guy in guys:
        guy.actor.draw()

def update():
    for guy in guys:
        guy.act(guy.choose())
        guy.actor.angle = guy.d * -90
    sleep(0.1)

pgzrun.go()